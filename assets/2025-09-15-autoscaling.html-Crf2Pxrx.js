import{_ as c,c as u,a,b as s,d as r,f as t,r as l,o as k,e as p}from"./app-CSMHBbaB.js";const d="/images/2025-09-15-autoscaling/image.png",m="/images/2025-09-15-autoscaling/image-20250917135838910.png",v={},b={class:"table-of-contents"};function y(g,n){const i=l("Header"),e=l("router-link"),o=l("Footer");return k(),u("div",null,[a(i),s("nav",b,[s("ul",null,[s("li",null,[a(e,{to:"#karpenter-란"},{default:t(()=>n[0]||(n[0]=[p("Karpenter 란?")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#karpenter-동작원리"},{default:t(()=>n[1]||(n[1]=[p("karpenter 동작원리")])),_:1})]),s("li",null,[a(e,{to:"#karpenter-특징"},{default:t(()=>n[2]||(n[2]=[p("karpenter 특징")])),_:1})]),s("li",null,[a(e,{to:"#karpenter-를-선택한-이유"},{default:t(()=>n[3]||(n[3]=[p("karpenter 를 선택한 이유")])),_:1})])])]),s("li",null,[a(e,{to:"#설정-및-구성"},{default:t(()=>n[4]||(n[4]=[p("설정 및 구성")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#hpa-구성"},{default:t(()=>n[5]||(n[5]=[p("HPA 구성")])),_:1})]),s("li",null,[a(e,{to:"#karpenter-설정-및-구성"},{default:t(()=>n[6]||(n[6]=[p("karpenter 설정 및 구성")])),_:1}),s("ul",null,[s("li",null,[a(e,{to:"#리소스"},{default:t(()=>n[7]||(n[7]=[p("리소스")])),_:1})])])])])]),s("li",null,[a(e,{to:"#사용"},{default:t(()=>n[8]||(n[8]=[p("사용")])),_:1})]),s("li",null,[a(e,{to:"#ref"},{default:t(()=>n[9]||(n[9]=[p("Ref.")])),_:1})])])]),n[10]||(n[10]=r('<p>쿠버네티스 운영 환경의 두번째 단계는 오토스케일링 준비다. 이전에는 HPA + ASG 를 활용해서 오토스케일링을 구성했는데 이번에는 비용 효율적이고 속도가 빠른 Karpenter 를 활용해보려고 한다.</p><h1 id="karpenter-란" tabindex="-1"><a class="header-anchor" href="#karpenter-란"><span>Karpenter 란?</span></a></h1><p>Karpenter는 대기(Pending) 파드를 감지해 요구사항에 꼭 맞는 노드를 수십 초–수분 내 신속히 띄우고, 유휴 노드는 합리적으로 줄여 비용과 가용성을 동시에 최적화하는 노드 오토스케일러이다. 기존 Cluster Autoscaler(CA)가 ASG(노드 그룹) 중심으로 스케일링하는 반면, Karpenter는 파드 요구사항을 직접 읽어 가장 알맞은 인스턴스(타입/크기/구역/구매옵션)를 고른 뒤 EC2 Fleet API로 곧장 노드를 띄운다. 이 구조 덕분에 더 빠른 확장과 세밀한 인스턴스 선택이 가능하게 된다.</p><h2 id="karpenter-동작원리" tabindex="-1"><a class="header-anchor" href="#karpenter-동작원리"><span>karpenter 동작원리</span></a></h2><p><img src="'+d+`" alt="image-20250915232215825"></p><ol><li><strong>Horizontal Pod AutoScaler(HPA)</strong> 에 의한 Pod의 수평적 확장이 한계에 다다르면, Pod 는 적절한 Node 를 배정받지 못하고 pending 상태에 빠진다.</li><li>이때 <strong>Karpenter</strong> 는 지속해서 unscheduled Pod 를 관찰하고 있다가, 새로운 Node 추가를 결정하고 직접 배포한다.</li><li>추가된 Node가 Ready 상태가 되면 <strong>Karpenter</strong> 는 <strong>kube-scheduler</strong> 를 대신하여 pod 의 <strong>Node binding</strong> 요청도 수행한다.</li></ol><h2 id="karpenter-특징" tabindex="-1"><a class="header-anchor" href="#karpenter-특징"><span>karpenter 특징</span></a></h2><ol><li><strong>간단한 구성</strong></li></ol><ul><li><code>NodePool</code>(스케일 정책) + <code>EC2NodeClass</code>(AWS 세부설정) 두 개의 CRD 로 구성됨</li><li>ASG 중심의 복잡한 노드그룹 관리가 줄고, 선언형으로 일관되게 운용할 수 있음</li><li>서브넷/보안그룹은 태그 셀렉터로 자동 발견이 가능해 초기 세팅이 가벼움</li></ul><ol start="2"><li><strong>신속한 Node 추가/제거</strong></li></ol><ul><li>Pending 파드를 즉시 감지해 EC2 Fleet로 곧바로 노드를 띄워 초 단위~수분 단위로 확장됨</li><li>Spot 중단 신호(2분 전) 감지 시 자동 cordon/drain 후 보충까지 이어진다.</li></ul><ol start="3"><li><strong>다양한 인스턴스 타입 적용</strong></li></ol><ul><li><code>requirements</code>로 인스턴스 카테고리/사이즈/아키텍처/가용영역/구매옵션(spot·on-demand)을 폭넓게 열어두면, Karpenter가 가격·용량 최적 조합을 찾는다.</li></ul><h2 id="karpenter-를-선택한-이유" tabindex="-1"><a class="header-anchor" href="#karpenter-를-선택한-이유"><span>karpenter 를 선택한 이유</span></a></h2><p>이전 회사에서 EKS 를 구성할 때 CPU 와 메모리가 특정 범위를 초과하면 ASG 가 노드를 추가하도록 구성했다. 하지만 노드가 추가되는 게 느렸고 적절한 트리거를 설정하는 것도 어려웠다. 또한 파드 하나를 띄우기 위해 큰 사이즈의 노드가 생성되는 것도 비용적으로 낭비라고 느껴졌다.</p><p>karpenter 는 이러한 점을 모두 커버할 수 있는 신속하고 비용 효율적인 선택이라고 생각되었다. 또한 여러 옵션의 조합을 manifest 파일로 관리할 수 있는 것도 좋았다. 반대로 ASG 는 인프라 레벨에서 조정해야 하는 부분이 번거로웠기도 했다.</p><h1 id="설정-및-구성" tabindex="-1"><a class="header-anchor" href="#설정-및-구성"><span>설정 및 구성</span></a></h1><h2 id="hpa-구성" tabindex="-1"><a class="header-anchor" href="#hpa-구성"><span>HPA 구성</span></a></h2><p>HPA(Horizontal Pod Autoscaler) 란 쿠버네티스의 오토스케일링 기능 중 하나로, 파드(Pod)의 개수를 자동으로 늘리거나 줄이는 컨트롤러다. 즉, 애플리케이션의 부하(예: CPU, 메모리 사용량)가 증가하면 파드를 더 띄워서 트래픽을 분산 처리하고, 부하가 줄어들면 파드 수를 줄여서 리소스를 절약한다.</p><p>HPA 는 파드만 늘려줄 뿐 노드까지 컨트롤하지는 못한다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> autoscaling/v2</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> HorizontalPodAutoscaler</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> backend<span class="token punctuation">-</span>hpa</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">scaleTargetRef</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1</span>
<span class="line">    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment</span>
<span class="line">    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.backend.name <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">minReplicas</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.backend.replicaCount.min <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">maxReplicas</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.backend.replicaCount.max <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">metrics</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> Resource</span>
<span class="line">      <span class="token key atrule">resource</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> cpu</span>
<span class="line">        <span class="token key atrule">target</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">type</span><span class="token punctuation">:</span> Utilization</span>
<span class="line">          <span class="token key atrule">averageUtilization</span><span class="token punctuation">:</span> <span class="token number">70</span>   <span class="token comment"># CPU 70% 이상</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> Resource</span>
<span class="line">      <span class="token key atrule">resource</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> memory</span>
<span class="line">        <span class="token key atrule">target</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">type</span><span class="token punctuation">:</span> Utilization</span>
<span class="line">          <span class="token key atrule">averageUtilization</span><span class="token punctuation">:</span> <span class="token number">90</span>   <span class="token comment"># Memory 90% 이상</span></span>
<span class="line">  <span class="token key atrule">behavior</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">scaleUp</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">policies</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">120</span></span>
<span class="line">          <span class="token key atrule">type</span><span class="token punctuation">:</span> Pods</span>
<span class="line">          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># 한번에 2개까지만 추가</span></span>
<span class="line">      <span class="token key atrule">selectPolicy</span><span class="token punctuation">:</span> Max</span>
<span class="line">    <span class="token key atrule">scaleDown</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">policies</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">120</span></span>
<span class="line">          <span class="token key atrule">type</span><span class="token punctuation">:</span> Pods</span>
<span class="line">          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 한번에 1개까지만 제거</span></span>
<span class="line">      <span class="token key atrule">selectPolicy</span><span class="token punctuation">:</span> Min</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>{{ .Values.backend.name }}</code> 이름의 Deployment 에 대해 min, max 를 설정하고, target 을 넘게 되면 pod 에 대한 scale out 이 된다.</p><h2 id="karpenter-설정-및-구성" tabindex="-1"><a class="header-anchor" href="#karpenter-설정-및-구성"><span>karpenter 설정 및 구성</span></a></h2><p>karpenter 를 헬름 차트로 배포하는 방법은 두가지가 있다. 첫번째는 AWS ECR Public에 있는 Helm 차트 경로로 배포하는 방법이고 두번째는 차트를 직접 다운로드한 후 helm chart 로 구성하는 방법이다. 나는 이중 <strong>차트를 직접 다운로드한 후 helm chart 로 구성</strong>했다. 그 이유는 두 가지인데,</p><ol><li>karpenter 을 구성하는 리소스가 비교적 간단함 <ul><li>templates/ 위치에 yaml 파일이 10개밖에 없다. 직접 구성해도 된다. 그래서 버전 관리도 간단할 것이라고 느껴졌다.</li><li>마찬가지로 values.yaml 파일의 구성들도 간단하다.</li></ul></li><li>Nodepool, EC2NodeClass 가 차트 경로에 없음 <ul><li>오토스케일링을 구성하는 데 Nodepool, EC2NodeClass 두 리소스가 필요한데, 차트 경로에 없기 때문에 결국 직접 구성해줘야 한다. 따라서 처음부터 내가 직접 구성하는 게 낫겠다고 생각되었다.</li></ul></li></ol><h3 id="리소스" tabindex="-1"><a class="header-anchor" href="#리소스"><span>리소스</span></a></h3><p>다음 명령어로 리소스를 다운로드 받자</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">helm pull oci://public.ecr.aws/karpenter/karpenter \\</span>
<span class="line">  --version 1.6.3 \\</span>
<span class="line">  --untar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>리소스 목록은 아래와 같다.</p><p><img src="`+m+`" alt="image-20250917135838910"></p><p>이 중 Nodepool(nodepool.yaml) 과 EC2NodeClass(nodeclass.yaml) 만 확인해서 추가해주면 된다.</p><p><strong>nodepool.yaml</strong></p><p>어떤 인스턴스타입을 사용할지, 어떤 존에 넣을지 등등을 선택할 수 있다. 그리고 limits 로 노드가 무한 확장되지 않도록 한다. 설정값은 <a href="https://karpenter.sh/docs/concepts/nodepools/" target="_blank" rel="noopener noreferrer">공식문서</a> 참고</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> karpenter.sh/v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> NodePool</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.custom.nodePool.name <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">template</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">labels</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">Environment</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.custom.environment <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">nodeClassRef</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">group</span><span class="token punctuation">:</span> karpenter.k8s.aws</span>
<span class="line">        <span class="token key atrule">kind</span><span class="token punctuation">:</span> EC2NodeClass</span>
<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.custom.ec2NodeClass.name <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">      <span class="token key atrule">requirements</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;node.kubernetes.io/instance-type&quot;</span></span>
<span class="line">          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In</span>
<span class="line">          <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;c6g.large&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c6g.xlarge&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c6g.medium&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;m6g.xlarge&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;m6g.medium&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;m6g.large&quot;</span> <span class="token punctuation">]</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;topology.kubernetes.io/zone&quot;</span></span>
<span class="line">          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In</span>
<span class="line">          <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;ap-northeast-2a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ap-northeast-2b&quot;</span> <span class="token punctuation">]</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;kubernetes.io/arch&quot;</span></span>
<span class="line">          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In</span>
<span class="line">          <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;arm64&quot;</span> <span class="token punctuation">]</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;karpenter.sh/capacity-type&quot;</span></span>
<span class="line">          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In</span>
<span class="line">          <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;spot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;on-demand&quot;</span> <span class="token punctuation">]</span></span>
<span class="line">  <span class="token key atrule">disruption</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">consolidationPolicy</span><span class="token punctuation">:</span> WhenEmptyOrUnderutilized</span>
<span class="line">    <span class="token key atrule">consolidateAfter</span><span class="token punctuation">:</span> 1m</span>
<span class="line">  <span class="token key atrule">limits</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">&quot;10&quot;</span></span>
<span class="line">    <span class="token key atrule">memory</span><span class="token punctuation">:</span> 20Gi</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>EC2NodeClass</strong></p><p>subnet 선택, ami 선택, 인스턴스 프로필 선택 등 EC2 설정을 넣을 수 있다. AMI 를 id 값으로 넣어야 해서 불편하다. (알아서 선택해줬으면 좋겠다.)</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> karpenter.k8s.aws/v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> EC2NodeClass</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.custom.ec2NodeClass.name <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">amiFamily</span><span class="token punctuation">:</span> AL2023</span>
<span class="line">  <span class="token key atrule">subnetSelectorTerms</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> toYaml .Values.custom.ec2NodeClass.subnetSelectorTerms <span class="token punctuation">|</span> indent 4 <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">securityGroupSelectorTerms</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> toYaml .Values.custom.ec2NodeClass.securityGroupSelectorTerms <span class="token punctuation">|</span> indent 4 <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">amiSelectorTerms</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token punctuation">{</span> toYaml .Values.custom.ec2NodeClass.amiSelectorTerms <span class="token punctuation">|</span> indent 4 <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">instanceProfile</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.custom.ec2NodeClass.instanceProfile <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">blockDeviceMappings</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">deviceName</span><span class="token punctuation">:</span> /dev/xvda</span>
<span class="line">    <span class="token key atrule">ebs</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">volumeSize</span><span class="token punctuation">:</span> 20Gi</span>
<span class="line">      <span class="token key atrule">volumeType</span><span class="token punctuation">:</span> gp3</span>
<span class="line">      <span class="token key atrule">iops</span><span class="token punctuation">:</span> <span class="token number">3000</span></span>
<span class="line">      <span class="token key atrule">deleteOnTermination</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">      <span class="token key atrule">throughput</span><span class="token punctuation">:</span> <span class="token number">125</span></span>
<span class="line">  <span class="token key atrule">tags</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">Environment</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.custom.environment <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token key atrule">Name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.custom.nodeName <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="사용" tabindex="-1"><a class="header-anchor" href="#사용"><span>사용</span></a></h1><p>helm 으로 배포하면 karpenter controller 파드가 배포된다. 해당 파드가 리소스를 확인하면서 리소스가 부족하다면 (pending 상태의 파드가 있다면) 필요한 만큼의 노드를 늘리고(nodepool 생성), 그렇지 않다면 줄인다.</p><h1 id="ref" tabindex="-1"><a class="header-anchor" href="#ref"><span>Ref.</span></a></h1><ul><li><a href="https://docs.aws.amazon.com/eks/latest/userguide/autoscaling.html" target="_blank" rel="noopener noreferrer">EKS User Guide</a></li><li><a href="https://karpenter.sh/docs/concepts/nodepools/" target="_blank" rel="noopener noreferrer">Karpenter v1 문서</a></li><li><a href="https://aws.amazon.com/blogs/containers/using-amazon-ec2-spot-instances-with-karpenter/" target="_blank" rel="noopener noreferrer">AWS 컨테이너 블로그</a></li><li><a href="https://aws.amazon.com/blogs/containers/optimizing-your-kubernetes-compute-costs-with-karpenter-consolidation/?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer">Consolidation 효과 및 실무 주의점</a></li><li><a href="https://devblog.kakaostyle.com/ko/2022-10-13-1-karpenter-on-eks/" target="_blank" rel="noopener noreferrer">EKS클러스터 Karpenter 적용기</a></li></ul>`,41)),a(o)])}const f=c(v,[["render",y],["__file","2025-09-15-autoscaling.html.vue"]]),C=JSON.parse('{"path":"/posts/infra/2025-09-15-autoscaling.html","title":"쿠버네티스 운영 환경 준비 하기 - 2. karpenter","lang":"en-US","frontmatter":{"title":"쿠버네티스 운영 환경 준비 하기 - 2. karpenter","date":"2025-09-15T00:00:00.000Z","tags":["kubenetes","karpenter"],"description":"오토스케일링을 위한 karpenter 설정"},"headers":[{"level":1,"title":"Karpenter 란?","slug":"karpenter-란","link":"#karpenter-란","children":[{"level":2,"title":"karpenter 동작원리","slug":"karpenter-동작원리","link":"#karpenter-동작원리","children":[]},{"level":2,"title":"karpenter 특징","slug":"karpenter-특징","link":"#karpenter-특징","children":[]},{"level":2,"title":"karpenter 를 선택한 이유","slug":"karpenter-를-선택한-이유","link":"#karpenter-를-선택한-이유","children":[]}]},{"level":1,"title":"설정 및 구성","slug":"설정-및-구성","link":"#설정-및-구성","children":[{"level":2,"title":"HPA 구성","slug":"hpa-구성","link":"#hpa-구성","children":[]},{"level":2,"title":"karpenter 설정 및 구성","slug":"karpenter-설정-및-구성","link":"#karpenter-설정-및-구성","children":[{"level":3,"title":"리소스","slug":"리소스","link":"#리소스","children":[]}]}]},{"level":1,"title":"사용","slug":"사용","link":"#사용","children":[]},{"level":1,"title":"Ref.","slug":"ref","link":"#ref","children":[]}],"git":{},"filePathRelative":"_posts/infra/2025-09-15-autoscaling.md"}');export{f as comp,C as data};
