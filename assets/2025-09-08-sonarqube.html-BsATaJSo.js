import{_ as p,c as u,a as n,b as e,d,f as a,r as i,o as c,e as t}from"./app-XEtoo7R3.js";const g="/images/2025-09-08-sonarqube/image-20250908182504581.png",h="/images/2025-09-08-sonarqube/image-20250908184210639.png",m={},b={class:"table-of-contents"};function f(v,l){const r=i("Header"),s=i("router-link"),o=i("Footer");return c(),u("div",null,[n(r),e("nav",b,[e("ul",null,[e("li",null,[n(s,{to:"#소나큐브란"},{default:a(()=>l[0]||(l[0]=[t("소나큐브란?")])),_:1}),e("ul",null,[e("li",null,[n(s,{to:"#기본-동작-방식"},{default:a(()=>l[1]||(l[1]=[t("기본 동작 방식")])),_:1})]),e("li",null,[n(s,{to:"#소나큐브의-특징"},{default:a(()=>l[2]||(l[2]=[t("소나큐브의 특징")])),_:1}),e("ul",null,[e("li",null,[n(s,{to:"#_1-코드-품질-지표-제공"},{default:a(()=>l[3]||(l[3]=[t("1. 코드 품질 지표 제공")])),_:1})]),e("li",null,[n(s,{to:"#_2-품질-게이트-quality-gate"},{default:a(()=>l[4]||(l[4]=[t("2. 품질 게이트(Quality Gate)")])),_:1})]),e("li",null,[n(s,{to:"#_3-ci-cd-및-협업-도구와의-연동"},{default:a(()=>l[5]||(l[5]=[t("3. CI/CD 및 협업 도구와의 연동")])),_:1})]),e("li",null,[n(s,{to:"#_4-대시보드와-시각화"},{default:a(()=>l[6]||(l[6]=[t("4. 대시보드와 시각화")])),_:1})]),e("li",null,[n(s,{to:"#_5-보안-및-규정-준수-지원"},{default:a(()=>l[7]||(l[7]=[t("5. 보안 및 규정 준수 지원")])),_:1})])])])])]),e("li",null,[n(s,{to:"#도입방법"},{default:a(()=>l[8]||(l[8]=[t("도입방법")])),_:1}),e("ul",null,[e("li",null,[n(s,{to:"#소나큐브-헬름-차트-구조"},{default:a(()=>l[9]||(l[9]=[t("소나큐브 헬름 차트 구조")])),_:1})]),e("li",null,[n(s,{to:"#소나큐브-project-생성"},{default:a(()=>l[10]||(l[10]=[t("소나큐브 project 생성")])),_:1})]),e("li",null,[n(s,{to:"#pr-시-정적분석-시행"},{default:a(()=>l[11]||(l[11]=[t("pr 시 정적분석 시행")])),_:1})])])]),e("li",null,[n(s,{to:"#결과"},{default:a(()=>l[12]||(l[12]=[t("결과")])),_:1})]),e("li",null,[n(s,{to:"#ref"},{default:a(()=>l[13]||(l[13]=[t("Ref.")])),_:1})])])]),l[14]||(l[14]=d('<p>현재 회사에서 신규 프로젝트에 대한 백엔드 개발을 거의 혼자하고 있어서 PR 리뷰가 제대로 되고 있지 않은 상황이다. 따라서 여러 분석 툴을 고민해봤는데, 내가 원하는 기능(자동으로 분석 후 PR 메시지에 리뷰 달아주기)은 모두 유료였다. 따라서 우선적으로 할 수 있는 sonarqube 커뮤니티 버전을 도입해서 정적 분석이라도 하자는 생각으로 소나큐브를 도입하게 되었다. <strong>소나큐브를 확인하면서 조금씩 이슈를 해결해나갈 생각이다.</strong></p><h1 id="소나큐브란" tabindex="-1"><a class="header-anchor" href="#소나큐브란"><span>소나큐브란?</span></a></h1><p>**소나큐브(SonarQube)**는 오픈소스 기반의 <strong>정적 코드 분석(Static Code Analysis)</strong> 플랫폼이다. 정적 분석이란 프로그램을 실제로 실행하지 않고 소스 코드만을 읽어 잠재적인 문제를 찾아내는 방식인데, 소나큐브는 이를 자동화하여 코드 품질과 보안 취약점을 지속적으로 점검한다.</p><h3 id="기본-동작-방식" tabindex="-1"><a class="header-anchor" href="#기본-동작-방식"><span>기본 동작 방식</span></a></h3><ol><li><strong>소스 코드 수집</strong>: 개발자가 작성한 코드를 스캐너(SonarScanner)를 통해 수집</li><li><strong>정적 분석</strong>: 코드 품질, 버그, 보안 취약점, 중복 코드 등을 규칙(rule set)에 따라 분석</li><li><strong>분석 결과 저장</strong>: 소나큐브 서버의 데이터베이스에 결과를 저장</li><li><strong>대시보드 시각화</strong>: 웹 UI를 통해 프로젝트별 품질 상태를 한눈에 확인 가능</li><li><strong>품질 게이트(Quality Gate) 적용</strong>: 특정 기준(버그 0, 취약점 0, 커버리지 80% 이상 등)을 만족하지 않으면 “실패” 처리</li></ol><h2 id="소나큐브의-특징" tabindex="-1"><a class="header-anchor" href="#소나큐브의-특징"><span>소나큐브의 특징</span></a></h2><h3 id="_1-코드-품질-지표-제공" tabindex="-1"><a class="header-anchor" href="#_1-코드-품질-지표-제공"><span>1. 코드 품질 지표 제공</span></a></h3><p>소나큐브는 코드에 대한 다양한 품질 지표를 제공한다.</p><ul><li><strong>Bug</strong>: 실행 시 오류를 일으킬 수 있는 문제 (NullPointerException 가능성 등)</li><li><strong>Vulnerability</strong>: 보안상 취약점 (SQL Injection, XSS 등)</li><li><strong>Code Smell</strong>: 즉시 오류는 아니지만 장기적으로 유지보수성을 해치는 패턴</li><li><strong>Coverage</strong>: 단위 테스트가 얼마나 코드를 덮고 있는지(테스트 커버리지 %)</li><li><strong>Duplications</strong>: 중복된 코드 비율</li><li><strong>Complexity</strong>: 메서드, 클래스의 복잡도 (예: Cyclomatic Complexity)</li></ul><p>이러한 지표는 <strong>A~E 등급</strong> 또는 **수치(%)**로 제공된다.</p><h3 id="_2-품질-게이트-quality-gate" tabindex="-1"><a class="header-anchor" href="#_2-품질-게이트-quality-gate"><span>2. 품질 게이트(Quality Gate)</span></a></h3><p>품질 게이트는 말 그대로 “통과/실패”를 판단하는 기준선이다. 예를 들어, 팀에서 아래와 같은 기준을 정할 수 있다.</p><ul><li>버그(Bugs) = 0</li><li>보안 취약점(Vulnerabilities) = 0</li><li>코드 스멜(Code Smells) ≤ 10</li><li>테스트 커버리지 ≥ 80%</li></ul><p>이 기준을 통과하지 못하면 <strong>PR 머지 차단</strong> 같은 조치를 자동화할 수 있어, 팀 전체의 코드 품질을 균일하게 유지할 수 있다.</p><h3 id="_3-ci-cd-및-협업-도구와의-연동" tabindex="-1"><a class="header-anchor" href="#_3-ci-cd-및-협업-도구와의-연동"><span>3. CI/CD 및 협업 도구와의 연동</span></a></h3><ul><li><strong>Jenkins, GitLab CI, GitHub Actions</strong>와 같은 파이프라인에 쉽게 통합 가능</li><li>Pull Request 단위로 품질 분석 결과를 코멘트 형태로 확인 가능</li><li>JIRA, Slack 같은 협업 툴과도 연동해 알림 제공</li></ul><h3 id="_4-대시보드와-시각화" tabindex="-1"><a class="header-anchor" href="#_4-대시보드와-시각화"><span>4. 대시보드와 시각화</span></a></h3><p>소나큐브는 단순한 리포팅 툴이 아니라, <strong>웹 UI 기반 대시보드</strong>를 제공한다.</p><ul><li>프로젝트별 품질 현황</li><li>모듈/패키지/파일 단위의 상세 리포트</li><li>시간에 따른 품질 변화 추세 그래프</li><li>팀/조직 단위의 품질 비교</li></ul><h3 id="_5-보안-및-규정-준수-지원" tabindex="-1"><a class="header-anchor" href="#_5-보안-및-규정-준수-지원"><span>5. 보안 및 규정 준수 지원</span></a></h3><p>소나큐브는 <strong>OWASP Top 10</strong>, <strong>CWE</strong>, <strong>SANS Top 25</strong> 등 국제적으로 인정받는 보안 표준에 따라 취약점을 검출한다.</p><h1 id="도입방법" tabindex="-1"><a class="header-anchor" href="#도입방법"><span>도입방법</span></a></h1><p>나는 커뮤니티 버전을 헬름 차트로 작성해서 쿠버네티스에 설치하고, 깃허브와 연결했다.</p><h2 id="소나큐브-헬름-차트-구조" tabindex="-1"><a class="header-anchor" href="#소나큐브-헬름-차트-구조"><span>소나큐브 헬름 차트 구조</span></a></h2><p>argocd 에서 본 구조다.</p><p><img src="'+g+`" alt="image-20250908182504581"></p><p><strong>필요 리소스</strong></p><ul><li>deployment : sonarqube:community 버전</li><li>service : 로드밸런서 연결용</li><li>ingress : ALB 연결용</li><li>secrets : 데이터베이스 정보</li><li>serviceaccount : aws 리소스(secretsmanager) 에 접근할 수 있는 RBAC</li><li>secretproviderclass : secretsmanager 값을 읽어서 aws-secrets 로 저장</li><li>pvc(+ EBS 볼륨) : sonarqube-data (검색 인덱스, 메타데이터 등), sonarqube-extensions (마켓플레이스, 플러그인)</li></ul><h2 id="소나큐브-project-생성" tabindex="-1"><a class="header-anchor" href="#소나큐브-project-생성"><span>소나큐브 project 생성</span></a></h2><ol><li>소나큐브에 로그인을 한다.</li><li>&#39;Create a local project&#39; 로 새로운 프로젝트를 생성한다.</li><li>token 을 발급받는다.</li></ol><h2 id="pr-시-정적분석-시행" tabindex="-1"><a class="header-anchor" href="#pr-시-정적분석-시행"><span>pr 시 정적분석 시행</span></a></h2><p>pr 메시지 생성을 하고 싶었는데 developer 를 결제하거나, 아니면 플러그인 설치 후 젠킨스까지 필요했다. 젠킨스를 사용할 리소스도 부족했기 때문에 커뮤니티 기능만 사용하는 것으로 결정했다.</p><p>gitactions 에 다음을 추가한다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sonarqube</span>
<span class="line">        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">          ./gradlew sonar \\</span>
<span class="line">            -Dsonar.projectKey=projectKey \\</span>
<span class="line">            -Dsonar.projectName=&#39;projectName&#39; \\</span>
<span class="line">            -Dsonar.host.url=https://sonarqube.example.com \\</span>
<span class="line">            -Dsonar.token=\${{ secrets.SONARQUBE_TOKEN }}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SONARQUBE_TOKEN 은 깃 레포 secret 에 넣어주면 된다.</p><h1 id="결과" tabindex="-1"><a class="header-anchor" href="#결과"><span>결과</span></a></h1><p><img src="`+h+'" alt="image-20250908184210639"></p><p>이제 결과를 보고 이슈를 해결해보자. 현재는 이슈가 많아서 한번에는 힘들고, 코드를 리팩토링하면서 조금씩 해봐야겠다.</p><h1 id="ref" tabindex="-1"><a class="header-anchor" href="#ref"><span>Ref.</span></a></h1><ol><li><a href="https://snoop-study.tistory.com/138" target="_blank" rel="noopener noreferrer">SnoarQube 8.9 연동가이드</a> : <em>jenkins 로 pr 메시지 만들기</em></li></ol>',40)),n(o)])}const k=p(m,[["render",f],["__file","2025-09-08-sonarqube.html.vue"]]),y=JSON.parse('{"path":"/posts/spring/2025-09-08-sonarqube.html","title":"테스트가 업무다 - 3 (sonarqube)","lang":"en-US","frontmatter":{"title":"테스트가 업무다 - 3 (sonarqube)","date":"2025-09-08T00:00:00.000Z","tags":["sonarqube"],"description":"깃 pr 시 소나큐브 정적 분석 적용"},"headers":[{"level":1,"title":"소나큐브란?","slug":"소나큐브란","link":"#소나큐브란","children":[{"level":3,"title":"기본 동작 방식","slug":"기본-동작-방식","link":"#기본-동작-방식","children":[]},{"level":2,"title":"소나큐브의 특징","slug":"소나큐브의-특징","link":"#소나큐브의-특징","children":[{"level":3,"title":"1. 코드 품질 지표 제공","slug":"_1-코드-품질-지표-제공","link":"#_1-코드-품질-지표-제공","children":[]},{"level":3,"title":"2. 품질 게이트(Quality Gate)","slug":"_2-품질-게이트-quality-gate","link":"#_2-품질-게이트-quality-gate","children":[]},{"level":3,"title":"3. CI/CD 및 협업 도구와의 연동","slug":"_3-ci-cd-및-협업-도구와의-연동","link":"#_3-ci-cd-및-협업-도구와의-연동","children":[]},{"level":3,"title":"4. 대시보드와 시각화","slug":"_4-대시보드와-시각화","link":"#_4-대시보드와-시각화","children":[]},{"level":3,"title":"5. 보안 및 규정 준수 지원","slug":"_5-보안-및-규정-준수-지원","link":"#_5-보안-및-규정-준수-지원","children":[]}]}]},{"level":1,"title":"도입방법","slug":"도입방법","link":"#도입방법","children":[{"level":2,"title":"소나큐브 헬름 차트 구조","slug":"소나큐브-헬름-차트-구조","link":"#소나큐브-헬름-차트-구조","children":[]},{"level":2,"title":"소나큐브 project 생성","slug":"소나큐브-project-생성","link":"#소나큐브-project-생성","children":[]},{"level":2,"title":"pr 시 정적분석 시행","slug":"pr-시-정적분석-시행","link":"#pr-시-정적분석-시행","children":[]}]},{"level":1,"title":"결과","slug":"결과","link":"#결과","children":[]},{"level":1,"title":"Ref.","slug":"ref","link":"#ref","children":[]}],"git":{},"filePathRelative":"_posts/spring/2025-09-08-sonarqube.md"}');export{k as comp,y as data};
