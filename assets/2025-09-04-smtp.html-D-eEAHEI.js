import{_ as o,c as r,a as s,b as t,d as p,f as n,r as a,o as c,e as i}from"./app-ASrK9K4X.js";const u="/images/2025-09-04-smtp/image-20250908190842600.png",m={},g={class:"table-of-contents"};function P(S,l){const d=a("Header"),e=a("router-link");return c(),r("div",null,[s(d),t("nav",g,[t("ul",null,[t("li",null,[s(e,{to:"#smtp-란"},{default:n(()=>l[0]||(l[0]=[i("SMTP 란?")])),_:1}),t("ul",null,[t("li",null,[s(e,{to:"#smtp-프로토콜-특징"},{default:n(()=>l[1]||(l[1]=[i("SMTP 프로토콜 특징")])),_:1})]),t("li",null,[s(e,{to:"#smtp-프로토콜-동작"},{default:n(()=>l[2]||(l[2]=[i("SMTP 프로토콜 동작")])),_:1})])])]),t("li",null,[s(e,{to:"#이메일을-보내는-플로우"},{default:n(()=>l[3]||(l[3]=[i("이메일을 보내는 플로우")])),_:1}),t("ul",null,[t("li",null,[s(e,{to:"#이메일-서버의-구성"},{default:n(()=>l[4]||(l[4]=[i("이메일 서버의 구성")])),_:1})]),t("li",null,[s(e,{to:"#네이버에서-구글로-보낼-때의-흐름"},{default:n(()=>l[5]||(l[5]=[i("네이버에서 구글로 보낼 때의 흐름")])),_:1})])])]),t("li",null,[s(e,{to:"#마치며"},{default:n(()=>l[6]||(l[6]=[i("마치며")])),_:1})])])]),l[7]||(l[7]=p(`<p>SMTP 에 대해 내가 아는 건 &quot;이메일을 보내는 프로토콜&quot;이라는 것이다. 이번에 AWS SES 로 이메일을 송수신하며 관리까지 할 수 없을까 확인하면서 문득 SMTP 에 대해 궁금해졌고 간단하게 찾아봤다.</p><h1 id="smtp-란" tabindex="-1"><a class="header-anchor" href="#smtp-란"><span>SMTP 란?</span></a></h1><p>SMTP(Simple Mail Transfer Protocol)는 인터넷을 통해 <strong>이메일을 전송하기 위해 표준화된 프로토콜</strong>이다. 우리가 Gmail, 네이버 메일, 회사 메일 등 어떤 서비스를 사용하든, 결국 *메일 서버 간의 메일 송수신에는 SMTP가 핵심 역할을 한다.</p><p>즉, SMTP는 &quot;메일을 보낸다&quot;라는 기능에만 집중된 프로토콜이며, 메일을 <strong>저장하거나 클라이언트가 읽는 것(IMAP, POP3)</strong> 은 별도의 프로토콜이 담당한다.</p><h2 id="smtp-프로토콜-특징" tabindex="-1"><a class="header-anchor" href="#smtp-프로토콜-특징"><span>SMTP 프로토콜 특징</span></a></h2><p><strong>텍스트 기반 프로토콜</strong></p><p>모든 명령어와 응답은 사람이 읽을 수 있는 텍스트로 주고받는다. (예: <code>HELO</code>, <code>MAIL FROM</code>, <code>RCPT TO</code>, <code>DATA</code>)</p><p><strong>TCP 기반 (포트 25, 465, 587)</strong></p><p>안정적인 전송을 위해 TCP를 사용하며, 기본 포트는 25번이다.</p><ul><li>25: 주로 서버 간 메일 릴레이용 (스팸 필터링 문제로 ISP가 종종 차단함)</li><li>465: SMTPS (암호화 전송)</li><li>587: 일반적인 클라이언트 → 서버 송신용 포트 (인증 필수)</li></ul><p><strong>계층 구조</strong></p><p>OSI 7계층에서 <strong>애플리케이션 계층</strong>에서 동작한다. 따라서 TCP/IP 스택 위에서 동작하며, 전송 중 보안을 위해 TLS(STARTTLS) 확장을 사용할 수 있다.</p><p><strong>왜 이메일에 쓰이는가?</strong></p><p>SMTP는 신뢰성 있는 전송을 위해 설계되었고, 명령·응답 기반이라 오류 처리가 명확하다. 또한 다른 프로토콜(IMAP/POP3)과 조합하면 이메일 시스템 전체를 완성할 수 있기 때문이다.</p><h2 id="smtp-프로토콜-동작" tabindex="-1"><a class="header-anchor" href="#smtp-프로토콜-동작"><span>SMTP 프로토콜 동작</span></a></h2><p>SMTP 세션은 크게 세 단계로 이뤄진다: <strong>연결 → 메일 전송 → 종료</strong></p><table><thead><tr><th>명령</th><th>의미</th></tr></thead><tbody><tr><td>HELO + <code>&lt;송신자의 호스트 이름&gt;</code></td><td>송신자의 호스트 이름을 전송하여 서버에 자신이 누구인지를 통지한다.</td></tr><tr><td>MAIL + <code>&lt;송신자의 메일 주소&gt;</code></td><td>송신자의 메일 주소를 통지한다.</td></tr><tr><td>RCPT + <code>&lt;수신자의 메일 주소&gt;</code></td><td>수신자의 메일 주소를 통지한다.</td></tr><tr><td>DATA + <code>&lt;메시지의 내용&gt;</code></td><td>메일 메시지를 송신하려고 사용할 때.</td></tr><tr><td>QUIT</td><td>더 이상의 전송 메시지가 없음을 통지한다.</td></tr><tr><td>RSET</td><td>현재의 연결 상태가 종료되었음을 통지하고, 연결 재설정이 이루어진다.</td></tr><tr><td>VRFY + <code>&lt;수신자의 메일 주소&gt;</code></td><td>수신자의 주소를 조회하려고 사용한다.</td></tr><tr><td>NOOP</td><td>수신자의 상태를 검사하려고 사용한다.</td></tr></tbody></table><p>예시 (구글 메일 서버와의 대화)</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">S: 220 smtp.gmail.com ESMTP</span>
<span class="line">C: HELO example.com</span>
<span class="line">S: 250 Hello example.com</span>
<span class="line">C: MAIL FROM:&lt;user@example.com&gt;</span>
<span class="line">S: 250 OK</span>
<span class="line">C: RCPT TO:&lt;friend@gmail.com&gt;</span>
<span class="line">S: 250 Accepted</span>
<span class="line">C: DATA</span>
<span class="line">S: 354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</span>
<span class="line">C: Subject: Test Mail</span>
<span class="line">C: Hello World</span>
<span class="line">C: .</span>
<span class="line">S: 250 Message queued</span>
<span class="line">C: QUIT</span>
<span class="line">S: 221 Bye</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>HELO/EHLO</code>: 클라이언트 식별</li><li><code>MAIL FROM</code>: 발신자 정보</li><li><code>RCPT TO</code>: 수신자 정보</li><li><code>DATA</code>: 본문 입력 시작</li><li><code>.</code>(단독 줄): 입력 종료 표시</li></ul><p>이런 텍스트 기반 대화가 TCP 세션 안에서 교환되며, 결국 수신자 메일 서버의 큐에 메일이 적재된다.</p><h1 id="이메일을-보내는-플로우" tabindex="-1"><a class="header-anchor" href="#이메일을-보내는-플로우"><span>이메일을 보내는 플로우</span></a></h1><h2 id="이메일-서버의-구성" tabindex="-1"><a class="header-anchor" href="#이메일-서버의-구성"><span>이메일 서버의 구성</span></a></h2><p>이메일 송수신에는 다음과 같은 구성 요소가 필요하다</p><ul><li><strong>MUA (Mail User Agent)</strong>: 클라이언트 앱 (예: Outlook, Gmail 웹)</li><li><strong>MTA (Mail Transfer Agent)</strong>: 메일 서버 (Postfix, Exim, Sendmail 등)</li><li><strong>MDA (Mail Delivery Agent)</strong>: 최종적으로 메일박스에 저장하는 역할</li><li><strong>프로토콜</strong>: <ul><li>송신: SMTP</li><li>수신: IMAP / POP3</li></ul></li></ul><p>즉, 메일을 &quot;보낸다&quot;는 행위만 보면 SMTP가 전부지만, 실제로 <strong>메일을 &quot;읽고 관리&quot;하는 것</strong>은 IMAP/POP3가 있어야 가능하다.</p><h2 id="네이버에서-구글로-보낼-때의-흐름" tabindex="-1"><a class="header-anchor" href="#네이버에서-구글로-보낼-때의-흐름"><span>네이버에서 구글로 보낼 때의 흐름</span></a></h2><p><img src="`+u+'" alt="image-20250908190842600"></p><ol><li>사용자가 네이버 웹메일에서 작성 후 &quot;보내기&quot; 클릭</li><li>네이버 메일 서버(MTA)가 SMTP 세션을 열고, 구글 메일 서버(Gmail MTA)로 전송</li><li>Gmail MTA가 메일을 수신 후 큐에 저장</li><li>Gmail 내부 MDA가 이를 사용자 메일박스에 넣음</li><li>사용자가 Gmail 앱을 열면, 클라이언트(MUA)가 IMAP/POP3를 통해 메일을 읽음</li></ol><p>즉, 네이버 → 구글로 전송할 때 <strong>중간은 무조건 SMTP</strong>, 수신 후 사용자 단에서 <strong>IMAP/POP3</strong>로 확인한다.</p><h1 id="마치며" tabindex="-1"><a class="header-anchor" href="#마치며"><span>마치며</span></a></h1><p>사실 AWS SES 로 메일을 관리하려고 알아보다가 SMTP 까지 공부하게 되었다. 그런데 SES 는 <strong>SMTP 송신(메일 보내기)와 수신(메일 수신 후 S3 저장)</strong> 기능은 제공하지만, <strong>메일을 관리하거나 클라이언트에서 읽는 기능(IMAP/POP3)</strong> 은 제공하지 않는다.</p><p>즉, SES는 &quot;이메일 전송 서비스&quot;일 뿐, &quot;메일 호스팅 서비스&quot;는 아니다.</p><ul><li><strong>SES로 할 수 있는 것</strong>: 대량 메일 발송, 수신 후 S3 저장/람다 트리거</li><li><strong>SES로 할 수 없는 것</strong>: 사용자 메일박스 관리, 클라이언트에서 메일 읽기(IMAP/POP3 제공 없음)</li></ul><p>만약 이메일 시스템을 완성하고 싶다면 <strong>Amazon WorkMail</strong> 을 사용해야 한다.</p><ul><li>사용자 당 월 $4</li><li>IMAP/SMTP 지원 (Outlook, Gmail 클라이언트 연동 가능)</li><li>제공 리전: Virginia, Oregon, Ireland</li></ul><p>따라서 &quot;보내는 것만&quot; 필요하다면 SES, &quot;전체 메일 서비스&quot;가 필요하다면 WorkMail을 고려해야 한다.</p>',37))])}const T=o(m,[["render",P],["__file","2025-09-04-smtp.html.vue"]]),h=JSON.parse('{"path":"/posts/tech/2025-09-04-smtp.html","title":"SMTP 가 뭘까","lang":"en-US","frontmatter":{"title":"SMTP 가 뭘까","date":"2025-09-04T00:00:00.000Z","tags":["smtp","idc"],"description":"그냥 궁금해서 찾아본 SMTP 와 이메일 보내는 간단한 플로우입니다."},"headers":[{"level":1,"title":"SMTP 란?","slug":"smtp-란","link":"#smtp-란","children":[{"level":2,"title":"SMTP 프로토콜 특징","slug":"smtp-프로토콜-특징","link":"#smtp-프로토콜-특징","children":[]},{"level":2,"title":"SMTP 프로토콜 동작","slug":"smtp-프로토콜-동작","link":"#smtp-프로토콜-동작","children":[]}]},{"level":1,"title":"이메일을 보내는 플로우","slug":"이메일을-보내는-플로우","link":"#이메일을-보내는-플로우","children":[{"level":2,"title":"이메일 서버의 구성","slug":"이메일-서버의-구성","link":"#이메일-서버의-구성","children":[]},{"level":2,"title":"네이버에서 구글로 보낼 때의 흐름","slug":"네이버에서-구글로-보낼-때의-흐름","link":"#네이버에서-구글로-보낼-때의-흐름","children":[]}]},{"level":1,"title":"마치며","slug":"마치며","link":"#마치며","children":[]}],"git":{},"filePathRelative":"_posts/tech/2025-09-04-smtp.md"}');export{T as comp,h as data};
