import{_ as d,c,a as n,b as s,d as p,f as i,r as t,o as u,e as a}from"./app-Da6UI3dN.js";const v="/images/2025-01-24-eksdnsresolve/thumbnail.png",m="/images/2025-01-24-eksdnsresolve/image-20250908001547213.png",h={},b={class:"table-of-contents"};function g(_,e){const r=t("Header"),l=t("router-link"),o=t("Footer");return u(),c("div",null,[n(r),s("nav",b,[s("ul",null,[s("li",null,[n(l,{to:"#_0-문제-상황"},{default:i(()=>e[0]||(e[0]=[a("0. 문제 상황")])),_:1})]),s("li",null,[n(l,{to:"#_1-문제-원인"},{default:i(()=>e[1]||(e[1]=[a("1. 문제 원인")])),_:1}),s("ul",null,[s("li",null,[n(l,{to:"#_1-1-kubenetes-의-dns-resolve-방법-dnspolicy"},{default:i(()=>e[2]||(e[2]=[a("1.1 kubenetes 의 DNS resolve 방법 (DnsPolicy)")])),_:1}),s("ul",null,[s("li",null,[n(l,{to:"#_1-1-1-dnspolicy-clusterfirst"},{default:i(()=>e[3]||(e[3]=[a("1.1.1 DnsPolicy: ClusterFirst")])),_:1})])])]),s("li",null,[n(l,{to:"#_1-2-coredns-위치"},{default:i(()=>e[4]||(e[4]=[a("1.2 CoreDNS 위치")])),_:1})]),s("li",null,[n(l,{to:"#_1-3-coredns-포트"},{default:i(()=>e[5]||(e[5]=[a("1.3 CoreDNS 포트")])),_:1})])])]),s("li",null,[n(l,{to:"#_2-해결"},{default:i(()=>e[6]||(e[6]=[a("2. 해결")])),_:1})])])]),e[7]||(e[7]=p('<h1 id="_0-문제-상황" tabindex="-1"><a class="header-anchor" href="#_0-문제-상황"><span>0. 문제 상황</span></a></h1><p><img src="'+v+`" alt="image-20250908001559407"></p><p>Prod 노드그룹에서는 외부서버와 DB 를 잘 호출하는데 Test 노드그룹의 파드에서는 아래와 같은 에러로 호출이 되지 않았다.</p><p><strong>Test 파드(Pod3)에서 외부서버 호출 시 에러</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2025-01-23T08:10:56.534Z ERROR 1 --- [nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.ResourceAccessException: I/O error on GET request for &quot;https://api.example.io/rec/a111&quot;: api.example.io] with root cause</span>
<span class="line"></span>
<span class="line">java.net.UnknownHostException: api.eigene.io</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Test 파드(Pod3)에서 MongoDB 호출 시 에러</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">ServerSelectionTimeoutError(</span>
<span class="line">pymongo.errors.ServerSelectionTimeoutError: mongodbexample.c5oaf62juy.ap-northeast-2.docdb.amazonaws.com:27017: [Errno -3] Temporary failure in name resolution, Timeout: 30s, Topology Description: &lt;TopologyDescription id: 67909ced38fb6b419822ffa6, topology_type: Single, servers: [&lt;ServerDescription (&#39;mongodbexample.c5oaf62juy.ap-northeast-2.docdb.amazonaws.com&#39;, 27017) server_type: Unknown, rtt: None, error=AutoReconnect(&#39;eg-interestdetection.c5oadcf62juy.ap-northeast-2.docdb.amazonaws.com:27017: [Errno -3] Temporary failure in name resolution&#39;)&gt;]&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>외부 서버 또는 DB 호출 시 공통적으로 호출하는 api 를 알 수 없다는 에러를 뱉었따. dns resolve 가 제대로 이루어지지 않았다는 뜻이다.</p><p>해당 노드로 직접 접속해서 <code>curl https://api.example.io </code> 를 호출했을 때는 정상적으로 작동하는 것으로 보아 파드에서 사용하는 DNS 의 문제였다.</p><h1 id="_1-문제-원인" tabindex="-1"><a class="header-anchor" href="#_1-문제-원인"><span>1. 문제 원인</span></a></h1><p>문제는 kube-system 에 있는 CoreDNS 에 접근이 되지 않아서였다.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">NAMESPACE                NAME                             READY   STATUS    RESTARTS   AGE</span>
<span class="line">kube-system              coredns-86f5954566-cc9tb         1/1     Running   0          23h</span>
<span class="line">kube-system              coredns-86f5954566-h9xrr         1/1     Running   0          23h</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-1-kubenetes-의-dns-resolve-방법-dnspolicy" tabindex="-1"><a class="header-anchor" href="#_1-1-kubenetes-의-dns-resolve-방법-dnspolicy"><span>1.1 kubenetes 의 DNS resolve 방법 (DnsPolicy)</span></a></h2><p>먼저 k8s의 dns 정책에 대해 확인해보자. DnsPolicy는 Pod의 DNS 설정을 결정하는 정책이다. 4가지 주요 옵션이 있다.</p><ol><li><code>ClusterFirst</code> (기본값) <ul><li>클러스터의 DNS 서비스를 사용</li><li>클러스터 도메인에 없는 쿼리는 상위 nameserver로 전달</li></ul></li><li><code>Default</code><ul><li>노드의 DNS 설정을 그대로 상속</li><li>노드의 <code>/etc/resolv.conf</code> 사용</li></ul></li><li><code>ClusterFirstWithHostNet</code><ul><li>hostNetwork: true 설정된 Pod용</li><li><code>ClusterFirst</code>와 동일하게 작동</li></ul></li><li><code>None</code><ul><li>DNS 설정을 수동으로 지정</li><li>dnsConfig 필드를 통해 커스텀 설정 필요</li></ul></li></ol><p><strong>적용 방법</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">apiVersion: v1</span>
<span class="line">kind: Pod</span>
<span class="line">metadata:</span>
<span class="line">  name: dns-example</span>
<span class="line">spec:</span>
<span class="line">  dnsPolicy: &quot;None&quot;</span>
<span class="line">  dnsConfig:</span>
<span class="line">    nameservers:</span>
<span class="line">      - 8.8.8.8</span>
<span class="line">    searches:</span>
<span class="line">      - ns1.svc.cluster.local</span>
<span class="line">    options:</span>
<span class="line">      - name: ndots</span>
<span class="line">        value: &quot;5&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-1-dnspolicy-clusterfirst" tabindex="-1"><a class="header-anchor" href="#_1-1-1-dnspolicy-clusterfirst"><span>1.1.1 DnsPolicy: ClusterFirst</span></a></h3><p>기본은 ClusterFisrt 다. CoreDNS 파드에 먼저 질의를 한 후 nameserver 에 질의를 한다. CoreDNS 에서는 쿠버네티스의 서비스명으로 dns 를 해석할 수 있다.</p><h2 id="_1-2-coredns-위치" tabindex="-1"><a class="header-anchor" href="#_1-2-coredns-위치"><span>1.2 CoreDNS 위치</span></a></h2><blockquote><p>EKS CoreDNS 관련 자료 : https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/managing-coredns.html</p></blockquote><p>CoreDNS 는 Deployment 로 2개의 파드가 배포된다.</p><p><img src="`+m+'" alt="image-20250908001547213"></p><p>위에서 Node3 이 Node1 또는 2에 접근이 안된다면 coreDNS 에 접근할 수 없다.</p><h2 id="_1-3-coredns-포트" tabindex="-1"><a class="header-anchor" href="#_1-3-coredns-포트"><span>1.3 CoreDNS 포트</span></a></h2><p>하지만 나는 보안그룹에서 노드 간 모든 포트에서 통신이 가능하도록 열어놨다. (노드에서 오는 TCP 0 - 65535 개방)</p><p>그런데 찾아보니 DNS 쿼리는 UDP 53번 포트로 통신했다(!). 따라서 <strong>문제는 Node3 이 Prod NodeGroup 의 UDP 53번 포트에 접근할 수 없어서 였다.</strong></p><h1 id="_2-해결" tabindex="-1"><a class="header-anchor" href="#_2-해결"><span>2. 해결</span></a></h1><p>해결 방법은 2가지인데,</p><ol><li>Test Group 에도 coreDNS 배포</li><li>보안그룹에서 Test Group -&gt; Prod Group UDP 53번 포트 개방</li></ol><p>나는 kube-system 의 파드 설정을 건드리기보다 UDP 53번 포트를 개방해 간단하게 해결했다.</p>',31)),n(o)])}const S=d(h,[["render",g],["__file","2025-01-24-eksdnsresolve.html.vue"]]),D=JSON.parse('{"path":"/posts/infra/2025-01-24-eksdnsresolve.html","title":"EKS 의 DNS resolve 문제","lang":"en-US","frontmatter":{"title":"EKS 의 DNS resolve 문제","date":"2025-01-24T00:00:00.000Z","tags":["kafka","docker"],"description":"EKS 에서 DNS resolve 문제와 해결"},"headers":[{"level":1,"title":"0. 문제 상황","slug":"_0-문제-상황","link":"#_0-문제-상황","children":[]},{"level":1,"title":"1. 문제 원인","slug":"_1-문제-원인","link":"#_1-문제-원인","children":[{"level":2,"title":"1.1 kubenetes 의 DNS resolve 방법 (DnsPolicy)","slug":"_1-1-kubenetes-의-dns-resolve-방법-dnspolicy","link":"#_1-1-kubenetes-의-dns-resolve-방법-dnspolicy","children":[{"level":3,"title":"1.1.1 DnsPolicy: ClusterFirst","slug":"_1-1-1-dnspolicy-clusterfirst","link":"#_1-1-1-dnspolicy-clusterfirst","children":[]}]},{"level":2,"title":"1.2 CoreDNS 위치","slug":"_1-2-coredns-위치","link":"#_1-2-coredns-위치","children":[]},{"level":2,"title":"1.3 CoreDNS 포트","slug":"_1-3-coredns-포트","link":"#_1-3-coredns-포트","children":[]}]},{"level":1,"title":"2. 해결","slug":"_2-해결","link":"#_2-해결","children":[]}],"git":{},"filePathRelative":"_posts/infra/2025-01-24-eksdnsresolve.md"}');export{S as comp,D as data};
