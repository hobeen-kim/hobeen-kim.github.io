import{_ as s,c as a,d as p,o as t}from"./app-6M4v-pIF.js";const e="/images/Untitled/image-20250925155615693.png",l="/images/Untitled/image-20250925164415697.png",c="/images/Untitled/image-20250925164652504.png",o="/images/Untitled/image-20250925173229239.png",i={};function u(d,n){return t(),a("div",null,n[0]||(n[0]=[p('<p><img src="'+e+`" alt="image-20250925155615693"></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>app_id<span class="token punctuation">,</span> ac<span class="token punctuation">.</span>category_code </span>
<span class="line"><span class="token keyword">FROM</span> app_category ac <span class="token keyword">JOIN</span> LATERAL </span>
<span class="line"><span class="token punctuation">(</span> </span>
<span class="line">  <span class="token keyword">SELECT</span> app<span class="token punctuation">.</span>app_id<span class="token punctuation">,</span> app<span class="token punctuation">.</span>released_at<span class="token punctuation">,</span> app<span class="token punctuation">.</span>created_at </span>
<span class="line">  <span class="token keyword">FROM</span> app </span>
<span class="line">  <span class="token keyword">WHERE</span> app<span class="token punctuation">.</span>app_category_id <span class="token operator">=</span> ac<span class="token punctuation">.</span>app_category_id <span class="token operator">and</span> app<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;RELEASED&#39;</span> </span>
<span class="line">  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> app<span class="token punctuation">.</span>released_at <span class="token keyword">DESC</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>created_at <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> $<span class="token number">1</span> </span>
<span class="line"><span class="token punctuation">)</span> a <span class="token keyword">ON</span> <span class="token boolean">true</span> </span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ac<span class="token punctuation">.</span>category_code<span class="token punctuation">,</span> a<span class="token punctuation">.</span>released_at <span class="token keyword">DESC</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>created_at <span class="token keyword">DESC</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CREATE INDEX idx_app_category_status_released_created ON app (app_category_id, status, released_at DESC, created_at DESC);</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> app_id<span class="token punctuation">,</span> category_code</span>
<span class="line"><span class="token keyword">FROM</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>app_id<span class="token punctuation">,</span></span>
<span class="line">         ac<span class="token punctuation">.</span>category_code<span class="token punctuation">,</span></span>
<span class="line">         ROW_NUMBER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span></span>
<span class="line">           <span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> ac<span class="token punctuation">.</span>app_category_id</span>
<span class="line">           <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> a<span class="token punctuation">.</span>released_at <span class="token keyword">DESC</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>created_at <span class="token keyword">DESC</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>app_id <span class="token keyword">desc</span></span>
<span class="line">         <span class="token punctuation">)</span> <span class="token keyword">AS</span> rn</span>
<span class="line">  <span class="token keyword">FROM</span> app_category ac</span>
<span class="line">  <span class="token keyword">JOIN</span> app a</span>
<span class="line">    <span class="token keyword">ON</span> a<span class="token punctuation">.</span>app_category_id <span class="token operator">=</span> ac<span class="token punctuation">.</span>app_category_id</span>
<span class="line">   <span class="token operator">AND</span> a<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&#39;RELEASED&#39;</span></span>
<span class="line">  <span class="token keyword">order</span> <span class="token keyword">by</span> released_at <span class="token keyword">desc</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>created_at <span class="token keyword">desc</span><span class="token punctuation">,</span> app_id <span class="token keyword">desc</span></span>
<span class="line"><span class="token punctuation">)</span> ranked</span>
<span class="line"><span class="token keyword">WHERE</span> rn <span class="token operator">&lt;=</span> <span class="token number">9</span></span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> category_code<span class="token punctuation">,</span> app_id <span class="token keyword">desc</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>0.xx ms 로 떨어짐</p><p><img src="`+l+'" alt="image-20250925164415697"></p><h1 id="그-다음꺼" tabindex="-1"><a class="header-anchor" href="#그-다음꺼"><span>그 다음꺼</span></a></h1><p><img src="'+c+`" alt="image-20250925164652504"></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> a1_0<span class="token punctuation">.</span>app_id<span class="token punctuation">,</span></span>
<span class="line">       <span class="token keyword">COALESCE</span><span class="token punctuation">(</span><span class="token function">COUNT</span><span class="token punctuation">(</span>i1_0<span class="token punctuation">.</span>installation_id<span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> app a1_0</span>
<span class="line"><span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> installation i1_0</span>
<span class="line">       <span class="token keyword">ON</span> i1_0<span class="token punctuation">.</span>app_id <span class="token operator">=</span> a1_0<span class="token punctuation">.</span>app_id</span>
<span class="line"><span class="token keyword">JOIN</span> app_category c1_0</span>
<span class="line">       <span class="token keyword">ON</span> c1_0<span class="token punctuation">.</span>app_category_id <span class="token operator">=</span> a1_0<span class="token punctuation">.</span>app_category_id</span>
<span class="line"><span class="token keyword">WHERE</span> a1_0<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> $<span class="token number">2</span></span>
<span class="line">  <span class="token operator">AND</span> c1_0<span class="token punctuation">.</span>category_code <span class="token operator">=</span> $<span class="token number">3</span></span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> a1_0<span class="token punctuation">.</span>app_id</span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">COALESCE</span><span class="token punctuation">(</span><span class="token function">COUNT</span><span class="token punctuation">(</span>i1_0<span class="token punctuation">.</span>installation_id<span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">,</span></span>
<span class="line">         a1_0<span class="token punctuation">.</span>released_at <span class="token keyword">DESC</span></span>
<span class="line"><span class="token keyword">OFFSET</span> $<span class="token number">5</span> <span class="token keyword">ROWS</span> <span class="token keyword">FETCH</span> <span class="token keyword">FIRST</span> $<span class="token number">6</span> <span class="token keyword">ROWS</span> ONLY<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> pageOrder <span class="token operator">=</span> pageable<span class="token punctuation">.</span>sort<span class="token punctuation">.</span><span class="token function">getOrderFor</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;downloads&quot;</span></span><span class="token punctuation">)</span> <span class="token operator">?:</span> Sort<span class="token punctuation">.</span>Order<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;downloads&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">val</span> downloadOrder <span class="token operator">=</span> <span class="token keyword">if</span><span class="token punctuation">(</span>pageOrder<span class="token punctuation">.</span>isAscending<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            installation<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">coalesce</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            installation<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">coalesce</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 앱 조회 쿼리 실행</span></span>
<span class="line">        <span class="token keyword">val</span> results <span class="token operator">=</span> queryFactory</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span></span>
<span class="line">                app<span class="token punctuation">.</span>appId<span class="token punctuation">,</span></span>
<span class="line">                installation<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">coalesce</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">\`as\`</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;downloadCount&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>installation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>installation<span class="token punctuation">.</span>app<span class="token punctuation">.</span>appId<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>appId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>appId<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>downloadOrder<span class="token punctuation">,</span> app<span class="token punctuation">.</span>releasedAt<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pageable<span class="token punctuation">.</span>offset<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>pageable<span class="token punctuation">.</span>pageSize<span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>수정</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// 다운로드 수 정렬 방향 가져오기</span></span>
<span class="line">  <span class="token keyword">val</span> pageOrder <span class="token operator">=</span> pageable<span class="token punctuation">.</span>sort<span class="token punctuation">.</span><span class="token function">getOrderFor</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;downloads&quot;</span></span><span class="token punctuation">)</span> <span class="token operator">?:</span> Sort<span class="token punctuation">.</span>Order<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;downloads&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">val</span> installCount <span class="token operator">=</span> installation<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">\`as\`</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;installCount&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">val</span> downloadOrder <span class="token operator">=</span> <span class="token keyword">if</span><span class="token punctuation">(</span>pageOrder<span class="token punctuation">.</span>isAscending<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      installCount<span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      installCount<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 앱 조회 쿼리 실행</span></span>
<span class="line">  <span class="token keyword">val</span> results <span class="token operator">=</span> queryFactory</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span></span>
<span class="line">          app<span class="token punctuation">.</span>appId<span class="token punctuation">,</span></span>
<span class="line">          installCount</span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>installation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>installation<span class="token punctuation">.</span>app<span class="token punctuation">.</span>appId<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>appId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>appId<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>downloadOrder<span class="token punctuation">,</span> app<span class="token punctuation">.</span>releasedAt<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>pageable<span class="token punctuation">.</span>offset<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>pageable<span class="token punctuation">.</span>pageSize<span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>--&gt; 추가적인 정렬이 필요한 &quot;랭킹&quot;은 redis 로 빼자 (실시간성이 필요없음)</p><p><img src="`+o+`" alt="image-20250925173229239"></p><h1 id="app-검색" tabindex="-1"><a class="header-anchor" href="#app-검색"><span>app 검색</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE INDEX idx_app_status_category ON app (status, app_category_id, released_at);</span>
<span class="line">--</span>
<span class="line">CREATE EXTENSION IF NOT EXISTS pg_trgm;</span>
<span class="line">CREATE INDEX idx_app_name_trgm ON app USING gin (lower(app_name) gin_trgm_ops);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>--왜 기본 인덱스가 안 쓰일까?</p><p>B-Tree 인덱스는 문자열 앞부분(prefix) 이 고정된 경우에만 효율적입니다. → %로 시작하면 인덱스를 못 씁니다.</p><p>게다가 lower() 함수가 걸려 있어서, 그냥 app_name 인덱스는 더더욱 못 씁니다.</p><ul><li>g_trgm 확장을 사용하는 Trigram GIN 인덱스가 <code>ILIKE</code> (대소문자 무시) 검색도 잘 지원합니다.</li></ul><p>실행계획 (trgm 인덱스 추가전)</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Sort  (cost=1985.73..1985.90 rows=67 width=799)</span>
<span class="line">&quot;  Sort Key: app.released_at DESC, app.created_at DESC&quot;</span>
<span class="line">  -&gt;  Nested Loop  (cost=0.00..1983.70 rows=67 width=799)</span>
<span class="line">        Join Filter: (ac.app_category_id = app.app_category_id)</span>
<span class="line">        -&gt;  Seq Scan on app_category ac  (cost=0.00..1.07 rows=1 width=120)</span>
<span class="line">              Filter: ((category_code)::text = &#39;ENTERTAINMENT&#39;::text)</span>
<span class="line">        -&gt;  Seq Scan on app  (cost=0.00..1977.60 rows=402 width=679)</span>
<span class="line">              Filter: (lower((app_name)::text) ~~ &#39;%app%&#39;::text)</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>추가 후</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Sort  (cost=483.36..483.52 rows=67 width=799)</span>
<span class="line">&quot;  Sort Key: app.released_at DESC, app.created_at DESC&quot;</span>
<span class="line">  -&gt;  Nested Loop  (cost=60.60..481.32 rows=67 width=799)</span>
<span class="line">        -&gt;  Seq Scan on app_category ac  (cost=0.00..1.07 rows=1 width=120)</span>
<span class="line">              Filter: ((category_code)::text = &#39;ENTERTAINMENT&#39;::text)</span>
<span class="line">        -&gt;  Bitmap Heap Scan on app  (cost=60.60..478.91 rows=134 width=679)</span>
<span class="line">              Recheck Cond: ((lower((app_name)::text) ~~ &#39;%app%&#39;::text) AND (ac.app_category_id = app_category_id))</span>
<span class="line">              -&gt;  BitmapAnd  (cost=60.60..60.60 rows=134 width=0)</span>
<span class="line">                    -&gt;  Bitmap Index Scan on idx_app_name_trgm  (cost=0.00..14.83 rows=402 width=0)</span>
<span class="line">                          Index Cond: (lower((app_name)::text) ~~ &#39;%app%&#39;::text)</span>
<span class="line">                    -&gt;  Bitmap Index Scan on idx_app_category_status_released_created  (cost=0.00..45.39 rows=3347 width=0)</span>
<span class="line">                          Index Cond: (app_category_id = ac.app_category_id)</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>방법 :</p><ol><li>필요한 column 만 찾기</li></ol>`,26)]))}const k=s(i,[["render",u],["__file","Untitled.html.vue"]]),v=JSON.parse('{"path":"/posts/database/Untitled.html","title":"그 다음꺼","lang":"en-US","frontmatter":{},"headers":[{"level":1,"title":"그 다음꺼","slug":"그-다음꺼","link":"#그-다음꺼","children":[]},{"level":1,"title":"app 검색","slug":"app-검색","link":"#app-검색","children":[]}],"git":{},"filePathRelative":"_posts/database/Untitled.md"}');export{k as comp,v as data};
